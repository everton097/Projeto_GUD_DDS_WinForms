<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wiYhZocAAAAASUVORK5CYII=
</value>
  </data>
</root>